{"version":3,"sources":["firebase.config.js","firebase.setup.js","GameProvider.js","components/JoinGame.js","components/CreateGame.js","components/Login.js","components/Circle.js","components/Square.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","GameContext","React","createContext","GameProvider","children","useState","id","setId","Array","fill","board","setBoard","pieces","setPieces","useEffect","updates","ref","update","updateUserData","console","log","on","snapshot","val","Provider","value","gameId","setGameId","PlayGame","context","useContext","undefined","Error","JoinGame","nickname","Typography","TextField","label","variant","onChange","e","target","Button","onClick","CreateGame","Login","setNickname","joinGame","setJoinGame","createGame","setCreateGame","validName","Grid","container","item","Circle","useDrag","type","collect","monitor","isDragging","drag","className","Square","hasPiece","setHasPiece","useDrop","accept","drop","dropPiece","isOver","slice","Board","player","setPlayer","isWinner","i","DndProvider","backend","HTML5Backend","map","pieceId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bb6173c.chunk.js","sourcesContent":["const firebaseConfig = {\n    apiKey: \"AIzaSyDyxR_SwWR-JeUvI-udOuXE7KCdEqHh1T0\",\n    authDomain: \"tic-tac-two-d3477.firebaseapp.com\",\n    databaseURL: \"https://tic-tac-two-d3477-default-rtdb.firebaseio.com\",\n    projectId: \"tic-tac-two-d3477\",\n    storageBucket: \"tic-tac-two-d3477.appspot.com\",\n    messagingSenderId: \"315005811898\",\n    appId: \"1:315005811898:web:90c046cbd735eb84741683\",\n    measurementId: \"G-H4BW3WB4SN\"\n  };\n\nexport default firebaseConfig;","import firebase from 'firebase';\nimport firebaseConfig from './firebase.config';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\nexport default database;","import React, { useState, useEffect } from \"react\";\nimport database from './firebase.setup';\nimport { ref, set } from \"firebase\";\n\nconst GameContext = React.createContext();\n\nfunction GameProvider ({ children }) {\n    const [id, setId] = useState(null);\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [pieces, setPieces] = useState([0, 1, 2, 3, 4, 5]);\n\n    useEffect(() => {\n       // test writing\n       updateUserData()\n    }, [board, id])\n\n    function writeUserData() {\n        console.log(\"helllo dude\")\n        database.ref('/').set({\n            game: {\n                id: id,\n                board: board\n            }\n        });\n      }\n\n    function updateUserData() {\n        var updates = {};\n        updates['/games/' + id] = {\n            board: board\n        };\n    \n        return database.ref().update(updates);\n    }\n\n    useEffect(() => {\n        console.log(\"called\");\n        var starCountRef = database.ref('/');\n        starCountRef.on('value', (snapshot) => {\n            console.log(snapshot.val());\n        });\n    }, [id])\n\n    return(\n        <GameContext.Provider value={{\n            gameId: id,\n            board: board,\n            pieces: pieces,\n            setGameId: setId,\n            setBoard: setBoard,\n            setPieces: setPieces\n        }}>{children}\n        </GameContext.Provider>\n    );\n}\n\nfunction PlayGame() {\n    const context = React.useContext(GameContext)\n    if (context === undefined) {\n      throw new Error('playGame must be used within a GameProvider')\n    }\n    return context\n  }\n\nexport { GameProvider, PlayGame }","import React, { useState } from \"react\";\nimport {TextField, Button, Typography} from '@material-ui/core';\nimport { PlayGame } from '../GameProvider'\n\nconst JoinGame = ( { nickname } ) => {\n  const { setGameId } = PlayGame();\n  const [id, setId] = useState(null);\n\n  const handleButton = () => {\n    console.log(\"poop\")\n    if (id !== null) {\n      console.log(\"successs\",id)\n      setGameId(\"AAAA\");\n    }\n  }\n\n  const onChange = (e) => {\n    console.log(e)\n    setId(e.target.value);\n    console.log(id)\n  }\n\n  return (\n    <div>\n      <Typography>Hello {nickname}!</Typography>\n      <TextField id=\"outlined-basic\" label=\"Enter code\" variant=\"outlined\" onChange={onChange} />\n      <Button variant=\"contained\" onClick={handleButton} >Join Room</Button>\n    </div>\n  );\n}\nexport default JoinGame;","import React, { } from \"react\";\nimport { Button, Typography } from '@material-ui/core';\nimport { PlayGame } from '../GameProvider'\n\nconst CreateGame = ( { nickname } ) => {\n  const { setGameId } = PlayGame();\n\n  return (\n    <div>\n      <Typography>Hello {nickname}!</Typography>\n      <Typography>AAAA</Typography>\n      <Button variant=\"contained\" onClick={() => {\n        setGameId(\"BBBB\");\n      }}>Start Game</Button>\n    </div>\n  );\n}\nexport default CreateGame;","import React, { useState } from \"react\";\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport JoinGame from \"./JoinGame\";\nimport CreateGame from \"./CreateGame\";\n\nconst Login = ( ) => {\n  const [nickname, setNickname] = useState(\"\");\n  const [joinGame, setJoinGame] = useState(false);\n  const [createGame, setCreateGame] = useState(false);\n\n  const handleName = (e) => {\n    setNickname(e.target.value);\n  };\n\n  const validName = () => {\n    if (nickname === \"\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const handleCreate = () => {\n    if (validName()) {\n      setCreateGame(true);\n      setJoinGame(false);\n    }\n  }\n\n  const handleJoin = () => {\n    if (validName()) {\n      setJoinGame(true);\n      setCreateGame(false);\n    }\n  }\n\n  return (\n    <div>\n      <TextField id=\"outlined-basic\" label=\"Enter nickname\" variant=\"outlined\" onChange={handleName} />\n      <Grid container>\n        <Grid item>\n          <Button onClick={handleCreate} variant=\"contained\">Create Game</Button>\n        </Grid>\n          <Grid item></Grid>\n        <Grid item>\n          <Button onClick={handleJoin} variant=\"contained\">Join Existing Game</Button>\n        </Grid>\n      </Grid>\n      {joinGame && <JoinGame nickname={nickname} />}\n      {createGame && <CreateGame nickname={nickname} />}\n    </div>\n  );\n}\nexport default Login;","import React, { } from \"react\";\nimport { useDrag } from 'react-dnd'\n\nconst Circle = ( {value} ) => {\n  const [{isDragging}, drag] = useDrag(() => ({\n    type: \"circle\",\n    item: {id: value},\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }))\n\n  return (\n    <div id={`circle-${value}`} ref={drag} className={`circle size-${value}`}>\n      {value}\n    </div>\n  );\n}\nexport default Circle;","import React, { useEffect, useState } from \"react\";\nimport { PlayGame } from '../GameProvider'\nimport { useDrop } from 'react-dnd'\nimport Circle from \"./Circle\";\n\nconst Square = ({ value }) => {\n  const { gameId, board, setBoard, pieces, setPieces } = PlayGame();\n  const [hasPiece, setHasPiece] = useState(null);\n\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: \"circle\",\n    drop: (item) => dropPiece(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }), [board])\n\n  const dropPiece = (id) => {\n    if (board[value] === null || id > board[value]) {\n      setBoard([\n        ...board.slice(0,value),\n        id,\n        ...board.slice(value+1)\n        ]\n      );\n      setHasPiece(id);\n\n      // var index = pieces.indexOf(id);\n      // pieces.splice(index, 1);\n      // console.log(\"pieces\", pieces);\n      // setPieces(pieces);\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"board\", board);\n    console.log(\"has\", hasPiece)\n  }, [board]);\n\n  return (\n    <div id={value} ref={drop} className=\"square\">\n      { hasPiece >= 0 ? <Circle value={ board[value] } /> : <div></div>}\n    </div>\n  );\n}\nexport default Square;","import React, { useState, useEffect } from \"react\";\nimport Square from \"./Square\"\nimport { PlayGame } from '../GameProvider'\nimport Circle from \"./Circle\";\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nconst Board = () => {\n    const [player, setPlayer] = useState(1); \n    const { gameId, board, setBoard, pieces } = PlayGame();\n\n    useEffect(() => {\n    if (isWinner()) {\n      console.log(\"winnder winnder chicken dinner\")\n    } else {\n      if (player === 0) {\n        setPlayer(1);\n      } else {\n        setPlayer(0);\n      }\n    }\n  }, [board]);\n\n  const isWinner = () => {\n    for (let i = 0; i < 3; i++) {\n      if (board[0+i] === board[1+i] && board[1+i] === board[2+i] && board[0+i] !== null) {\n        return true;\n      }\n      if (board[0+i] === board[3+i] && board[3+i] === board[6+i] && board[6+i] !== null) {\n        return true;\n      }\n    }\n    if (board[0] === board[4] && board[4] === board[8] && board[8] != null) {\n      return true;\n    }\n    if (board[2] === board[4] && board[4] === board[6] && board[6] != null) {\n      return true;\n    }\n    return false\n  }\n\n  const isPlayerOne = (value) => {\n    return value > 0 && value < 6;\n  }\n\n  return (\n    <div>\n    <DndProvider backend={HTML5Backend}>\n      <div>next player: p{player}</div>\n        <div className=\"board-row\">\n          <Square value={0} />\n          <Square value={1} />\n          <Square value={2} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={3} />\n          <Square value={4} />\n          <Square value={5} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={6} />\n          <Square value={7} />\n          <Square value={8} />\n        </div>\n        { pieces.map(pieceId => {\n          return <Circle value={pieceId} />\n        }) }\n    </DndProvider>\n    </div>\n  );\n}\nexport default Board;\n","import './App.css';\nimport React, { Component } from 'react'\nimport Login from './components/Login';\nimport Board from './components/Board'\nimport { PlayGame } from './GameProvider'\n\nfunction App() {\n  const { gameId } = PlayGame();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {gameId === null ? <Login /> : <Board />}\n      </header>\n    </div>\n\n  );\n}\n\nexport default App;\n\n/* TODO: \n    - make 1 of each player piece (infinite right now)\n    - make other player have pieces\n    - make random code generate for a new game\n    - host on github pages\n    - adjust win condition for size pieces \n    - test with two players \n    - make it not ugly \n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GameProvider } from './GameProvider'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameProvider>\n      <App />\n    </GameProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}