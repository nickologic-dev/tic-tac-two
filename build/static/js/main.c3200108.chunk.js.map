{"version":3,"sources":["firebase.config.js","firebase.setup.js","GameProvider.js","components/JoinGame.js","components/CreateGame.js","components/Login.js","components/Circle.js","components/Square.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","GameContext","React","createContext","GameProvider","children","useState","id","setId","player","setPlayer","currentPlayer","setCurrentPlayer","nicknames","setNicknames","Array","fill","board","setBoard","pieces","setPieces","useEffect","nextPlayer","console","log","updates","ref","update","updateUserData","on","snapshot","val","snap","games","tempBoard","i","Provider","value","gameId","setGameId","PlayGame","context","useContext","undefined","Error","JoinGame","nickname","Typography","TextField","label","variant","Button","onClick","code","document","getElementById","CreateGame","gameCode","Login","setNickname","joinGame","setJoinGame","createGame","setCreateGame","setGameCode","validName","makeCode","result","characters","charAt","Math","floor","random","length","onChange","e","target","Grid","container","item","Circle","useDrag","type","collect","monitor","isDragging","drag","className","Square","hasPiece","setHasPiece","useDrop","accept","drop","dropPiece","isOver","slice","Board","isWinner","DndProvider","backend","HTML5Backend","map","pieceId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yQAWeA,EAXQ,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBCLnBC,IAASC,cAAcV,GAEvB,IAEeW,EAFEF,IAASE,W,OCDpBC,EAAcC,IAAMC,gBAE1B,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACrB,EAAoBC,mBAAS,MAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0CJ,mBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAkCN,mBAAS,CAAC,EAAG,IAA/C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA0BR,mBAASS,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BZ,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAArD,mBAAOa,EAAP,KAAeC,EAAf,KAuDA,OArDAC,qBAAU,YAcV,WAGI,IAAIC,EAFJC,QAAQC,IAAI,eAIRF,EADW,IAAXb,EACa,EACI,EAErB,IAAIgB,EAAU,GACdA,EAAQ,UAAYlB,GAAM,CACtBe,WAAYA,EACZT,UAAWA,EACXI,MAAOA,GAGJjB,EAAS0B,MAAMC,OAAOF,GA3B9BG,KACA,CAACX,EAAOV,IA6BXc,qBAAU,WACNE,QAAQC,IAAI,UACOxB,EAAS0B,IAAI,KACnBG,GAAG,SAAS,SAACC,GACtBP,QAAQC,IAAIM,EAASC,OACrB,IAAIC,EAAOF,EAASC,MACpB,GAAIC,EAAKC,MAAM1B,GAAIU,MAAO,CAEtB,IADA,IAAIiB,EAAYnB,MAAM,GAAGC,KAAK,MACrBmB,EAAI,EAAGA,EAAI,EAAGA,IACfH,EAAKC,MAAM1B,GAAIU,MAAMkB,KACrBD,EAAUC,GAAKH,EAAKC,MAAM1B,GAAIU,MAAMkB,IAG5CjB,EAASgB,GACTpB,EAAakB,EAAKC,MAAM1B,GAAIM,WAC5BU,QAAQC,IAAI,WAAYQ,EAAKC,MAAM1B,GAAIe,YACvCV,EAAiBoB,EAAKC,MAAM1B,GAAIe,kBAGzC,CAACf,IAGA,cAACN,EAAYmC,SAAb,CAAsBC,MAAO,CACzBC,OAAQ/B,EACRU,MAAOA,EACPE,OAAQA,EACRV,OAAQA,EACRI,UAAWA,EACXF,cAAeA,EACf4B,UAAW/B,EACXU,SAAUA,EACVE,UAAWA,EACXV,UAAWA,EACXI,aAAcA,GAXlB,SAYIT,IAKZ,SAASmC,IACL,IAAMC,EAAUvC,IAAMwC,WAAWzC,GACjC,QAAgB0C,IAAZF,EACF,MAAM,IAAIG,MAAM,+CAElB,OAAOH,ECtFX,IAuBeI,EAvBE,SAAC,GAAoB,IAAjBC,EAAgB,EAAhBA,SACnB,EAA0DN,IAAlDD,EAAR,EAAQA,UAAW7B,EAAnB,EAAmBA,UAAWG,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,aAczC,OACE,gCACE,eAACiC,EAAA,EAAD,oBAAmBD,EAAnB,OACA,cAACE,EAAA,EAAD,CAAWzC,GAAG,YAAY0C,MAAM,aAAaC,QAAQ,aACrD,cAACC,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAhBX,WACnB7B,QAAQC,IAAI,QACZ,IAAI6B,EAAOC,SAASC,eAAe,aAAalB,MACnC,OAATgB,IACF9B,QAAQC,IAAI,UAAW6B,GACvBd,EAAUc,GACV3C,EAAU,GACVG,EAAU,GAAKiC,EACfhC,EAAaD,KAQb,2BCHS2C,EAhBI,SAAC,GAA8B,IAA3BV,EAA0B,EAA1BA,SAAUW,EAAgB,EAAhBA,SAC/B,EAA0DjB,IAAlDD,EAAR,EAAQA,UAAW7B,EAAnB,EAAmBA,UAAWG,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,aAEzC,OACE,gCACE,eAACiC,EAAA,EAAD,oBAAmBD,EAAnB,OACA,cAACC,EAAA,EAAD,UAAaU,IACb,cAACN,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAAS,WACnCb,EAAUkB,GACV/C,EAAU,GACVG,EAAU,GAAKiC,EACfhC,EAAaD,IAJf,4BCuDS6C,EA7DD,WACZ,MAAgCpD,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBa,EAAjB,KACA,EAAgCrD,oBAAS,GAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KACA,EAAoCvD,oBAAS,GAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,KACA,EAAgCzD,mBAAS,MAAzC,mBAAOmD,EAAP,KAAiBO,EAAjB,KAMMC,EAAY,WAChB,MAAiB,KAAbnB,GAuBAoB,EAAW,WAGf,IAFA,IAAIC,EAAmB,GACnBC,EAAmB,6BACbjC,EAAI,EAAGA,EAAI,EAAGA,IACtBgC,GAAUC,EAAWC,OAAOC,KAAKC,MAAMD,KAAKE,SAC5CJ,EAAWK,SAEb,OAAON,GAGT,OACE,gCACE,cAACnB,EAAA,EAAD,CAAWzC,GAAG,iBAAiB0C,MAAM,iBAAiBC,QAAQ,WAAWwB,SAxC1D,SAACC,GAClBhB,EAAYgB,EAAEC,OAAOvC,UAwCnB,eAACwC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC5B,EAAA,EAAD,CAAQC,QA/BK,WACfa,MACFF,GAAc,GACdF,GAAY,GAEZG,EADWE,KA2BwBhB,QAAQ,YAAvC,2BAEA,cAAC2B,EAAA,EAAD,CAAME,MAAI,IACZ,cAACF,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC5B,EAAA,EAAD,CAAQC,QA1BG,WACba,MACFJ,GAAY,GACZE,GAAc,KAuBmBb,QAAQ,YAArC,qCAGHU,GAAY,cAAC,EAAD,CAAUd,SAAUA,IAChCgB,GAAc,cAAC,EAAD,CAAYhB,SAAUA,EAAUW,SAAUA,Q,0BCzChDuB,EAjBA,SAAC,GAAe,IAAb3C,EAAY,EAAZA,MACR5B,EAAW+B,IAAX/B,OAER,EAA6BwE,aAAQ,iBAAO,CAC1CC,KAAM,SACNH,KAAM,CAACxE,GAAI8B,GACX8C,QAAS,SAAAC,GAAO,MAAK,CACnBC,aAAcD,EAAQC,mBAJ1B,mBAAqBC,GAArB,KAAQD,WAAR,MAQA,OACE,qBAAK9E,GAAE,iBAAY8B,GAASX,IAAK4D,EAAMC,UAAS,sBAAiBlD,EAAjB,oBAAkC5B,GAAlF,SACG4B,KC2BQmD,EAvCA,SAAC,GAAe,IAAbnD,EAAY,EAAZA,MAChB,EAAuDG,IAAvCvB,GAAhB,EAAQqB,OAAR,EAAgBrB,OAAOC,EAAvB,EAAuBA,SACvB,GADA,EAAiCC,OAAjC,EAAyCC,UACTd,mBAAS,OAAzC,mBAAOmF,EAAP,KAAiBC,EAAjB,KAEA,EAA2BC,aAAQ,iBAAO,CACxCC,OAAQ,SACRC,KAAM,SAACd,GAAD,OAAUe,EAAUf,EAAKxE,KAC/B4E,QAAS,SAAAC,GAAO,MAAK,CACnBW,SAAUX,EAAQW,cAElB,CAAC9E,IANL,mBAAmB4E,GAAnB,KAASE,OAAT,MAQMD,EAAY,SAACvF,IACI,OAAjBU,EAAMoB,IAAmB9B,EAAKU,EAAMoB,MACtCnB,EAAS,GAAD,mBACHD,EAAM+E,MAAM,EAAE3D,IADX,CAEN9B,GAFM,YAGHU,EAAM+E,MAAM3D,EAAM,MAGvBqD,EAAYnF,KAahB,OAJAc,qBAAU,cAEP,CAACJ,IAGF,qBAAKV,GAAI8B,EAAOX,IAAKmE,EAAMN,UAAU,SAArC,SACIE,GAAY,EAAI,cAAC,EAAD,CAAQpD,MAAQpB,EAAMoB,KAAc,2B,iBCqB7C4D,EAtDD,WACV,MAA4DzD,IAApDF,EAAR,EAAQA,OAAQrB,EAAhB,EAAgBA,MAAOE,EAAvB,EAAuBA,OAAmBR,GAA1C,EAA+BE,UAA/B,EAA0CF,eAE1CU,qBAAU,WACN6E,MAGH,CAACjF,IAEJ,IAAMiF,EAAW,WACf,IAAK,IAAI/D,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,GAAIlB,EAAM,EAAEkB,KAAOlB,EAAM,EAAEkB,IAAMlB,EAAM,EAAEkB,KAAOlB,EAAM,EAAEkB,IAAqB,OAAflB,EAAM,EAAEkB,GACpE,OAAO,EAET,GAAIlB,EAAM,EAAEkB,KAAOlB,EAAM,EAAEkB,IAAMlB,EAAM,EAAEkB,KAAOlB,EAAM,EAAEkB,IAAqB,OAAflB,EAAM,EAAEkB,GACpE,OAAO,EAGX,OAAIlB,EAAM,KAAOA,EAAM,IAAMA,EAAM,KAAOA,EAAM,IAAkB,MAAZA,EAAM,IAGxDA,EAAM,KAAOA,EAAM,IAAMA,EAAM,KAAOA,EAAM,IAAkB,MAAZA,EAAM,IAM9D,OACE,8BACA,eAACkF,EAAA,EAAD,CAAaC,QAASC,IAAtB,UACE,yCAAY/D,KACZ,mDAAsB3B,KACpB,sBAAK4E,UAAU,YAAf,UACE,cAAC,EAAD,CAAQlD,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,OAEjB,sBAAKkD,UAAU,YAAf,UACE,cAAC,EAAD,CAAQlD,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,OAEjB,sBAAKkD,UAAU,YAAf,UACE,cAAC,EAAD,CAAQlD,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,OAEflB,EAAOmF,KAAI,SAAAC,GACX,OAAO,cAAC,EAAD,CAAQlE,MAAOkE,aCpCjBC,MAbf,WAAgB,IACNlE,EAAWE,IAAXF,OAER,OACE,qBAAKiD,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACc,OAAXjD,EAAkB,cAAC,EAAD,IAAY,cAAC,EAAD,SCAxBmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChH,EAAD,UACE,cAAC,EAAD,QAGJkD,SAASC,eAAe,SAM1BkD,M","file":"static/js/main.c3200108.chunk.js","sourcesContent":["const firebaseConfig = {\n    apiKey: \"AIzaSyDyxR_SwWR-JeUvI-udOuXE7KCdEqHh1T0\",\n    authDomain: \"tic-tac-two-d3477.firebaseapp.com\",\n    databaseURL: \"https://tic-tac-two-d3477-default-rtdb.firebaseio.com\",\n    projectId: \"tic-tac-two-d3477\",\n    storageBucket: \"tic-tac-two-d3477.appspot.com\",\n    messagingSenderId: \"315005811898\",\n    appId: \"1:315005811898:web:90c046cbd735eb84741683\",\n    measurementId: \"G-H4BW3WB4SN\"\n  };\n\nexport default firebaseConfig;","import firebase from 'firebase';\nimport firebaseConfig from './firebase.config';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\n\nexport default database;","import React, { useState, useEffect } from \"react\";\nimport database from './firebase.setup';\nimport { ref, set } from \"firebase\";\n\nconst GameContext = React.createContext();\n\nfunction GameProvider ({ children }) {\n    const [id, setId] = useState(null);\n    const [player, setPlayer] = useState(null);\n    const [currentPlayer, setCurrentPlayer] = useState(0);\n    const [nicknames, setNicknames] = useState([0, 0]);\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [pieces, setPieces] = useState([0, 1, 2, 3, 4, 5]);\n\n    useEffect(() => {\n       // test writing\n       updateUserData()\n    }, [board, id])\n\n    function writeUserData() {\n        database.ref('/').set({\n            game: {\n                id: id,\n                board: board\n            }\n        });\n    }\n\n    function updateUserData() {\n        console.log(\"helllo dude\");\n\n        var nextPlayer;\n        if (player === 0) {\n            nextPlayer = 1;\n        } else {nextPlayer = 0;}\n\n        var updates = {};\n        updates['/games/' + id] = {\n            nextPlayer: nextPlayer,\n            nicknames: nicknames,\n            board: board\n        };\n    \n        return database.ref().update(updates);\n    }\n\n    useEffect(() => {\n        console.log(\"called\");\n        var starCountRef = database.ref('/');\n        starCountRef.on('value', (snapshot) => {\n            console.log(snapshot.val());\n            var snap = snapshot.val();\n            if (snap.games[id].board) {\n                var tempBoard = Array(9).fill(null);\n                for (var i = 0; i < 8; i++) {\n                    if (snap.games[id].board[i]) {\n                        tempBoard[i] = snap.games[id].board[i];\n                    }\n                }\n                setBoard(tempBoard);\n                setNicknames(snap.games[id].nicknames);\n                console.log(\"QWRETRYT\", snap.games[id].nextPlayer);\n                setCurrentPlayer(snap.games[id].nextPlayer);\n            }\n        });\n    }, [id])\n\n    return(\n        <GameContext.Provider value={{\n            gameId: id,\n            board: board,\n            pieces: pieces,\n            player: player,\n            nicknames: nicknames,\n            currentPlayer: currentPlayer,\n            setGameId: setId,\n            setBoard: setBoard,\n            setPieces: setPieces,\n            setPlayer: setPlayer,\n            setNicknames: setNicknames\n        }}>{children}\n        </GameContext.Provider>\n    );\n}\n\nfunction PlayGame() {\n    const context = React.useContext(GameContext)\n    if (context === undefined) {\n      throw new Error('playGame must be used within a GameProvider')\n    }\n    return context\n  }\n\nexport { GameProvider, PlayGame }","import React from \"react\";\nimport {TextField, Button, Typography} from '@material-ui/core';\nimport { PlayGame } from '../GameProvider'\n\nconst JoinGame = ( { nickname } ) => {\n  const { setGameId, setPlayer, nicknames, setNicknames } = PlayGame();\n\n  const handleButton = () => {\n    console.log(\"poop\")\n    var code = document.getElementById('join-game').value;\n    if (code !== null) {\n      console.log(\"success\", code)\n      setGameId(code);\n      setPlayer(1);\n      nicknames[0] = nickname;\n      setNicknames(nicknames);\n    }\n  }\n\n  return (\n    <div>\n      <Typography>Hello {nickname}!</Typography>\n      <TextField id=\"join-game\" label=\"Enter code\" variant=\"outlined\" />\n      <Button variant=\"contained\" onClick={handleButton} >Join Room</Button>\n    </div>\n  );\n}\nexport default JoinGame;","import React, { } from \"react\";\nimport { Button, Typography } from '@material-ui/core';\nimport { PlayGame } from '../GameProvider'\n\nconst CreateGame = ( { nickname, gameCode } ) => {\n  const { setGameId, setPlayer, nicknames, setNicknames } = PlayGame();\n\n  return (\n    <div>\n      <Typography>Hello {nickname}!</Typography>\n      <Typography>{gameCode}</Typography>\n      <Button variant=\"contained\" onClick={() => {\n        setGameId(gameCode);\n        setPlayer(0);\n        nicknames[0] = nickname;\n        setNicknames(nicknames);\n      }}>Start Game</Button>\n    </div>\n  );\n}\nexport default CreateGame;","import React, { useState } from \"react\";\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport JoinGame from \"./JoinGame\";\nimport CreateGame from \"./CreateGame\";\n\nconst Login = ( ) => {\n  const [nickname, setNickname] = useState(\"\");\n  const [joinGame, setJoinGame] = useState(false);\n  const [createGame, setCreateGame] = useState(false);\n  const [gameCode, setGameCode] = useState(null);\n\n  const handleName = (e) => {\n    setNickname(e.target.value);\n  };\n\n  const validName = () => {\n    if (nickname === \"\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const handleCreate = () => {\n    if (validName()) {\n      setCreateGame(true);\n      setJoinGame(false);\n      var code = makeCode;\n      setGameCode(code);\n    }\n  }\n\n  const handleJoin = () => {\n    if (validName()) {\n      setJoinGame(true);\n      setCreateGame(false);\n    }\n  }\n\n  const makeCode = () => {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for ( var i = 0; i < 4; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * \n      characters.length));\n    }\n    return result;\n  }\n\n  return (\n    <div>\n      <TextField id=\"outlined-basic\" label=\"Enter nickname\" variant=\"outlined\" onChange={handleName} />\n      <Grid container>\n        <Grid item>\n          <Button onClick={handleCreate} variant=\"contained\">Create Game</Button>\n        </Grid>\n          <Grid item></Grid>\n        <Grid item>\n          <Button onClick={handleJoin} variant=\"contained\">Join Existing Game</Button>\n        </Grid>\n      </Grid>\n      {joinGame && <JoinGame nickname={nickname} />}\n      {createGame && <CreateGame nickname={nickname} gameCode={gameCode} />}\n    </div>\n  );\n}\nexport default Login;","import React, { } from \"react\";\nimport { useDrag } from 'react-dnd'\nimport { PlayGame } from '../GameProvider'\n\nconst Circle = ( {value} ) => {\n  const { player } = PlayGame();\n\n  const [{isDragging}, drag] = useDrag(() => ({\n    type: \"circle\",\n    item: {id: value},\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }))\n\n  return (\n    <div id={`circle-${value}`} ref={drag} className={`circle size-${value} circle_p${player}`}>\n      {value}\n    </div>\n  );\n}\nexport default Circle;","import React, { useEffect, useState } from \"react\";\nimport { PlayGame } from '../GameProvider'\nimport { useDrop } from 'react-dnd'\nimport Circle from \"./Circle\";\n\nconst Square = ({ value }) => {\n  const { gameId, board, setBoard, pieces, setPieces } = PlayGame();\n  const [hasPiece, setHasPiece] = useState(null);\n\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: \"circle\",\n    drop: (item) => dropPiece(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }), [board])\n\n  const dropPiece = (id) => {\n    if (board[value] === null || id > board[value]) {\n      setBoard([\n        ...board.slice(0,value),\n        id,\n        ...board.slice(value+1)\n        ]\n      );\n      setHasPiece(id);\n\n      // var index = pieces.indexOf(id);\n      // pieces.splice(index, 1);\n      // console.log(\"pieces\", pieces);\n      // setPieces(pieces);\n    }\n  }\n\n  useEffect(() => {\n    // console.log(\"board\", board);\n  }, [board]);\n\n  return (\n    <div id={value} ref={drop} className=\"square\">\n      { hasPiece >= 0 ? <Circle value={ board[value] } /> : <div></div>}\n    </div>\n  );\n}\nexport default Square;","import React, { useState, useEffect } from \"react\";\nimport Square from \"./Square\"\nimport { PlayGame } from '../GameProvider'\nimport Circle from \"./Circle\";\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nconst Board = () => {\n    const { gameId, board, pieces, nicknames, currentPlayer } = PlayGame();\n\n    useEffect(() => {\n    if (isWinner()) {\n      // console.log(\"winnder winnder chicken dinner\")\n    }\n  }, [board]);\n\n  const isWinner = () => {\n    for (let i = 0; i < 3; i++) {\n      if (board[0+i] === board[1+i] && board[1+i] === board[2+i] && board[0+i] !== null) {\n        return true;\n      }\n      if (board[0+i] === board[3+i] && board[3+i] === board[6+i] && board[6+i] !== null) {\n        return true;\n      }\n    }\n    if (board[0] === board[4] && board[4] === board[8] && board[8] != null) {\n      return true;\n    }\n    if (board[2] === board[4] && board[4] === board[6] && board[6] != null) {\n      return true;\n    }\n    return false\n  }\n\n  return (\n    <div>\n    <DndProvider backend={HTML5Backend}>\n      <div>room: {gameId}</div>\n      <div>current player: {currentPlayer}</div>\n        <div className=\"board-row\">\n          <Square value={0} />\n          <Square value={1} />\n          <Square value={2} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={3} />\n          <Square value={4} />\n          <Square value={5} />\n        </div>\n        <div className=\"board-row\">\n          <Square value={6} />\n          <Square value={7} />\n          <Square value={8} />\n        </div>\n        { pieces.map(pieceId => {\n          return <Circle value={pieceId} />\n        }) }\n    </DndProvider>\n    </div>\n  );\n}\nexport default Board;\n","import './App.css';\nimport React, { Component } from 'react'\nimport Login from './components/Login';\nimport Board from './components/Board'\nimport { PlayGame } from './GameProvider'\n\nfunction App() {\n  const { gameId } = PlayGame();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {gameId === null ? <Login /> : <Board />}\n      </header>\n    </div>\n\n  );\n}\n\nexport default App;\n\n/* TODO: \n    - make 1 of each player piece (infinite right now)\n    - make other player have pieces\n    - make random code generate for a new game\n    - host on github pages\n    - adjust win condition for size pieces \n    - test with two players \n    - make it not ugly \n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GameProvider } from './GameProvider'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameProvider>\n      <App />\n    </GameProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}